'''
üñ•Ô∏è –ó–∞–¥–∞—á–∞ "–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ —Ü–∏—Ñ—Ä"
–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é get_multiplied_digits, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç —Ü–µ–ª–æ–µ —á–∏c–ª–æ number –∏ –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

–ü—É–Ω–∫—Ç—ã –∑–∞–¥–∞—á–∏:
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_multiplied_digits –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä number –≤ –Ω–µ–π.
–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é str_number –∏ –∑–∞–ø–∏—à–∏—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ(str) —á–∏—Å–ª–∞ number –≤ –Ω–µ—ë.
–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π –±—É–¥–µ—Ç –æ—Ç–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ—Å—Ç–æ—è—â–µ–π —Ü–∏—Ñ—Ä—ã –≤ —á–∏—Å–ª–µ: —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é first –∏ –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–µ—ë –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª
–∏–∑ str_number –≤ —á–∏—Å–ª–æ–≤–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏(int).
–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ first * get_multiplied_digits(int(str_number[1:])). –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤—ã —É–º–Ω–æ–∂–∏—Ç–µ –ø–µ—Ä–≤—É—é —Ü–∏—Ñ—Ä—É —á–∏—Å–ª–∞
–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —ç—Ç–æ–π –∂–µ —Ñ—É–Ω–∫—Ü–∏–∏ c —á–∏—Å–ª–æ–º, –Ω–æ —É–∂–µ –±–µ–∑ –ø–µ—Ä–≤–æ–π —Ü–∏—Ñ—Ä—ã.
4 –ø—É–Ω–∫—Ç –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –¥–ª–∏–Ω–∞ str_number –±–æ–ª—å—à–µ 1, —Ç.–∫. –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
–Ω–µ –ø–æ–ª—É—á–∏—Ç—å—Å—è –≤–∑—è—Ç—å —Å—Ä–µ–∑ str_number[1:].
–ï—Å–ª–∏ –∂–µ –¥–ª–∏–Ω–∞ str_number –Ω–µ –±–æ–ª—å—à–µ 1, —Ç–æ–≥–¥–∞ –≤–µ—Ä–Ω—É—Ç—å –æ—Å—Ç–∞–≤—à—É—é—Å—è —Ü–∏—Ñ—Ä—É first.
–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
get_multiplied_digits(40203) -> 4 * get_multiplied_digits(203) -> 4 * 2 * get_multiplied_digits(3) -> 4 * 2 * 3

–ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã:
–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥:
result = get_multiplied_digits(40203)
print(result)
–í—ã–≤–æ–¥ –Ω–∞ –∫–æ–Ω—Å–æ–ª—å:
24
'''

def get_multiplied_digits(number):
    str_number = str(number)

    if len(str_number) == 1:
        return int(str_number)

    first = int(str_number[0])
    remaining_number = int(str_number[1:])

    return first * get_multiplied_digits(remaining_number) if remaining_number != 0 else first


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å —É—á–µ—Ç–æ–º –Ω—É–ª—è
result = get_multiplied_digits(40203)
print(result)  # –í—ã–≤–æ–¥: 24
result = get_multiplied_digits(40003)
print(result)  # –í—ã–≤–æ–¥: 12